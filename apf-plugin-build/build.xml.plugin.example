<?xml version="1.0" encoding="UTF-8"?>
<project name="com.umeng.analytics" default="help">

	<!-- START: Customized build target ant: deploy. Added by Lucas Xu at 2013/03/18 -->

	<tstamp>

		<format pattern="yyyy-MM-dd HH:mm z" property="TODAY" />
	</tstamp>

	<tstamp>

		<format pattern="yyyyMMddHHmm" property="TIME" />
	</tstamp>

	<property name="version" value="${TIME}" />

	<property name="user.name" value="Umeng" />

	<!-- END: Customized build target ant: deploy. Added by Lucas Xu at 2013/03/18 -->


	<!-- The local.properties file is created and updated by the 'android' tool. 
		It contains the path to the SDK. It should *NOT* be checked into Version 
		Control Systems. -->

	<property file="local.properties" />

	<!-- The ant.properties file can be created by you. It is only edited by 
		the 'android' tool to add properties to it. This is the place to change some 
		Ant specific build properties. Here are some properties you may want to change/update: 
		source.dir The name of the source directory. Default is 'src'. out.dir The 
		name of the output directory. Default is 'bin'. For other overridable properties, 
		look at the beginning of the rules files in the SDK, at tools/ant/build.xml 
		Properties related to the SDK location or the project target should be updated 
		using the 'android' tool with the 'update' action. This file is an integral 
		part of the build system for your application and should be checked into 
		Version Control Systems. -->

	<property file="ant.properties" />

	<!-- if sdk.dir was not set from one of the property file, then get it from 
		the ANDROID_HOME env var. This must be done before we load project.properties 
		since the proguard config can use sdk.dir -->

	<property environment="env" />

	<condition property="sdk.dir" value="${env.ANDROID_HOME}">

		<isset property="env.ANDROID_HOME" />
	</condition>

	<!-- The project.properties file is created and updated by the 'android' 
		tool, as well as ADT. This contains project specific properties such as project 
		target, and library dependencies. Lower level build properties are stored 
		in ant.properties (or in .classpath for Eclipse projects). This file is an 
		integral part of the build system for your application and should be checked 
		into Version Control Systems. -->

	<loadproperties srcFile="project.properties" />

	<!-- quick check on sdk.dir -->

	<fail message="sdk.dir is missing. Make sure to generate local.properties using &apos;android update project&apos; or to inject it through the ANDROID_HOME environment variable." unless="sdk.dir" />

	<!-- START: Customized build target ant: deploy. Added by Lucas Xu at 2013/03/18 -->

	<!-- Converts this project's .class files into .dex files -->
	<target name="-pre-deploy" depends="release">
		<delete>
			<fileset dir="${out.absolute.dir}" includes="*.dex" />
			<fileset dir="${out.absolute.dir}" includes="*.dex.d" />
			<fileset dir="${out.absolute.dir}" includes="*.apk" />
			<fileset dir="${out.absolute.dir}/dexedLibs" includes="*" />
		</delete>
		<echo> executable="${dx}" output="${intermediate.dex.file}" nolocals="@{nolocals}" forceJumbo="${dex.force.jumbo}" disableDexMerger="true" verbose="true"</echo>
		<dex executable="${dx}" output="${intermediate.dex.file}" nolocals="@{nolocals}" forceJumbo="${dex.force.jumbo}" disableDexMerger="true" verbose="true">
			<path path="${out.absolute.dir}/classes" />
		</dex>
		<package-helper />
		 <antcall target="-release-sign"/>
	</target>
	<target name="deploy" depends="-pre-deploy" />





	<!-- END: Customized build target ant: deploy. Added by Lucas Xu at 2013/03/18 -->


	<!-- Import per project custom build rules if present at the root of the 
		project. This is the place to put custom intermediary targets such as: -pre-build 
		-pre-compile -post-compile (This is typically used for code obfuscation. 
		Compiled code location: ${out.classes.absolute.dir} If this is not done in 
		place, override ${out.dex.input.absolute.dir}) -post-package -post-build 
		-pre-clean -->

	<import file="custom_rules.xml" optional="true" />

	<!-- Import the actual build file. To customize existing targets, there 
		are two options: - Customize only one target: - copy/paste the target into 
		this file, *before* the <import> task. - customize it to your needs. - Customize 
		the whole content of build.xml - copy/paste the content of the rules files 
		(minus the top node) into this file, replacing the <import> task. - customize 
		to your needs. *********************** ****** IMPORTANT ****** *********************** 
		In all cases you must update the value of version-tag below to read 'custom' 
		instead of an integer, in order to avoid having your file be overridden by 
		tools such as "android update project" -->
	<!-- version-tag: custom -->

	<import file="${sdk.dir}/tools/ant/build.xml" />

</project>
